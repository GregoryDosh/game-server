package hi

import "github.com/gorilla/websocket"

// GameInterface holds the interface required for a Game to be served up by the server
type GameInterface interface {
	AddPlayer(PlayerInterface) (interface{}, error)
	RemovePlayer(PlayerInterface) error
	PlayerEvent(PlayerInterface, *PlayerEvent) error
	Name() string
	Status() string
	StartGame() error
	EndGame() error
	AutoStart()
}

// PlayerInterface defines the interface for a Player
type PlayerInterface interface {
	MessagePlayer(...*MessageToPlayer) error
}

// LobbyPlayer is a generic player in the lobby
type LobbyPlayer struct{
	Name string
	Sessions []*websocket.Conn
}

func (p *LobbyPlayer) MessagePlayer(...*MessageToPlayer) error { return nil }

// MessageToPlayer holds the type required for games to pass around as a shared type object
type MessageToPlayer struct {
	Type    string `json:"type"`
	Message string `json:"message"`
}

// PlayerEvent is an event generated by a player in a game to be fed into a game for processing.
type PlayerEvent struct {
	Type    string `json:"type"`
	Message string `json:"message"`
}
